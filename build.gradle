buildscript {
	repositories {
		google()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE"
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.6.RELEASE'
	id 'java'
	id 'idea'
}

allprojects {
	group 'com.rxcmd'
	version '0.0.1-SNAPSHOT'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		google()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-json'
		implementation 'org.apache.commons:commons-lang3'
		implementation 'org.modelmapper:modelmapper:2.3.0'
		implementation 'io.reactivex.rxjava2:rxjava:2.2.10'

		annotationProcessor 'org.projectlombok:lombok:1.18.6'
		implementation 'org.projectlombok:lombok:1.18.6'
		testImplementation 'org.projectlombok:lombok:1.18.6'

		implementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation group: 'junit', name: 'junit', version: '4.12'

		//slf4j 이렇게 각각 include 해야하는지?
		implementation 'org.slf4j:slf4j-api'
		implementation 'org.slf4j:jcl-over-slf4j'
		implementation 'org.slf4j:log4j-over-slf4j'
		implementation 'org.slf4j:jul-to-slf4j'
		implementation 'ch.qos.logback:logback-classic'
		implementation 'org.codehaus.janino:janino'
	}

}

configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
}
